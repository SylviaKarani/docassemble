name: Deploy Docassemble to AWS Lightsail

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-central-1'

    - name: Initialize Terraform
      env:
        LIGHTSAIL_SSH_PUBLIC_KEY: ${{ secrets.LIGHTSAIL_SSH_PUBLIC_KEY }}

      run: terraform init

    - name: Apply Terraform Configuration
      run: terraform apply -var "public_key=${{ secrets.LIGHTSAIL_SSH_PUBLIC_KEY }}" -auto-approve

    - name: Get Instance IP
      id: get-ip
      run: |
        IP=$(terraform output -raw instance_ip)
        echo "Retrieved IP: $IP"
        echo "INSTANCE_IP=$IP" >> "$GITHUB_ENV"
        echo "instance_ip=$IP" >> "$GITHUB_OUTPUT"

    - name: Wait for Instance Boot
      run: |
        echo "Waiting for instance to complete boot process..."
        sleep 90  # Adjust sleep time if needed

    - name: Test SSH Connection
      run: |
        # Add host key to known_hosts
        ssh-keyscan -H ${{ env.INSTANCE_IP }} >> ~/.ssh/known_hosts 2>/dev/null

        # Test connection with increased verbosity and timeout
        echo "Testing connection to ${{ env.INSTANCE_IP }}"

        ssh -v -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i <(echo "${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}") \
            ubuntu@${{ env.INSTANCE_IP }} \
            "echo 'Connection successful'"

    - name: Install Docker and Deploy Docassemble
      run: |
        INSTANCE_IP=$(terraform output -raw instance_ip)
        echo "Deploying to instance $INSTANCE_IP"
        ssh -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i <(echo "${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}") \
            ubuntu@${{ env.INSTANCE_IP }} << 'EOF'
          # Update system packages
          sudo apt update -y
          sudo apt upgrade -y

          # Install Docker dependencies
          sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

          # Add Docker GPG key and repository
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

          # Install Docker
          sudo apt update -y
          sudo apt install -y docker-ce docker-ce-cli containerd.io

          # Pull Docassemble image
          sudo docker pull sylvia98/docassemble:latest

          # Stop and remove existing container if it exists
          sudo docker stop docassemble 2>/dev/null || true
          sudo docker rm docassemble 2>/dev/null || true

          # Run new container
          sudo docker run -d -p 80:80 --name docassemble sylvia98/docassemble:latest


    - name: Verify Deployment
      run: |
        echo "Deployment completed successfully"
        echo "Instance IP: $INSTANCE_IP"
